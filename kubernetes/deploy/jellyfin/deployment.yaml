apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
spec:
  selector:
    matchLabels:
      app: jellyfin
      release: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
        release: jellyfin
    spec:
      automountServiceAccountToken: false
      containers:
      - image: linuxserver/jellyfin:latest
        imagePullPolicy: Always
        name: jellyfin

        # Bit of a security concern since application is externally available
        securityContext:
          privileged: true
        env:
        - name: DOCKER_MODS
          value: linuxserver/mods:jellyfin-opencl-intel-24.35.30872.22
        ports:
        - containerPort: 8096
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /etc/s6-overlay/s6-rc.d/svc-jellyfin/run
          subPath: run
          name: jellyfin-svc
        - mountPath: /data/shows
          name: shows
        - mountPath: /data/movies
          name: movies
        - mountPath: /data/3dmovies
          name: 3dmovies
        - mountPath: /data/music
          name: music
        - mountPath: /dev/dri/card1
          name: card
        - mountPath: /dev/dri/renderD128
          name: renderer
      restartPolicy: Always
      nodeName: mackey
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin
      - name: jellyfin-svc
        configMap:
          name: jellyfin-svc-cm
      - name: shows
        nfs:
          server: 192.168.100.40
          path: /volume1/Media/Shows
      - name: movies
        nfs:
          server: 192.168.100.40
          path: /volume1/Media/Movies
      - name: music
        nfs:
          server: 192.168.100.40
          path: /volume1/Media/Music
      - name: 3dmovies
        nfs:
          server: 192.168.100.40
          path: "/volume1/Media/3D Movies"      
      # Ensure device has rwx perms for other users on host (chmod -R o+rwx /dev/drive/card1)
      - name: card
        hostPath:
          path: /dev/dri/card1
      - name: renderer
        hostPath:
          path: /dev/dri/renderD128
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jellyfin-svc-cm
data:
  run: |
    #!/usr/bin/with-contenv bash
    # shellcheck shell=bash

    if [[ -z "${FFMPEG_PATH}" ]] || [[ ! -f "${FFMPEG_PATH}" ]]; then
        FFMPEG_PATH=/usr/lib/jellyfin-ffmpeg/ffmpeg
    fi

    export \
        HOME="/config" \
        JELLYFIN_DATA_DIR="/config/data" \
        JELLYFIN_CONFIG_DIR="/config" \
        JELLYFIN_LOG_DIR="/config/log" \
        JELLYFIN_CACHE_DIR="/config/cache" \
        JELLYFIN_WEB_DIR="/config/web"

    exec \
        s6-notifyoncheck -d -n 300 -w 1000 \
            s6-setuidgid abc /usr/bin/jellyfin \
            --ffmpeg="${FFMPEG_PATH}"