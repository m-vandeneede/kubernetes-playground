apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
spec:
  selector:
    matchLabels:
      app: pihole
      release: pihole
  template:
    metadata:
      labels:
        app: pihole
        release: pihole
    spec:
      containers:
      - env:
        - name: WEB_PORT
          value: "80"
        - name: VIRTUAL_HOST
          value: pi.hole
        - name: PIHOLE_DNS_
          value: 8.8.8.8;8.8.4.4
        image: pihole/pihole:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /admin.index.php
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: pihole
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 53
          name: dns
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin.index.php
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/pihole
          name: config
        - mountPath: /etc/dnsmasq.d
          name: config
          subPath: dnsmasq.d
      dnsConfig:
        nameservers:
        - 1.1.1.1
        - 8.8.8.8
      dnsPolicy: None
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: pihole